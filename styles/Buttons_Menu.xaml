<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fasharp="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:btnTags="clr-namespace:Button_Tags">

    <Style x:Key="Menu_Button_Radio" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" CornerRadius="0" Background="{StaticResource Background_2}">
                        <Grid>
                            <!--https://stackoverflow.com/questions/70235104/how-to-use-parameters-or-binding-for-wpf-buttons-to-change-fa-icons-in-xaml-styl-->

                            <Path Data="{Binding Path=(btnTags:IconProperties.Tag), RelativeSource={RelativeSource TemplatedParent}}" 
                                  x:Name="icon"
                                  Height="{Binding Path=(btnTags:IconProperties.TagIconHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                  Width="{Binding Path=(btnTags:IconProperties.TagIconWidth), RelativeSource={RelativeSource TemplatedParent}}"
                                  Fill="{Binding Path=(btnTags:IconProperties.TagFill), RelativeSource={RelativeSource TemplatedParent}}"
                                  Stroke="{Binding Path=(btnTags:IconProperties.TagStroke), RelativeSource={RelativeSource TemplatedParent}}"
                                  StrokeThickness="{Binding Path=(btnTags:IconProperties.TagStrokeThickenss),RelativeSource={RelativeSource TemplatedParent}}"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin=" 10,0,0,0"/>

                            <ContentPresenter x:Name="MyContentPresenter" 
                                                Content="{TemplateBinding Content}" 
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Center" 
                                                Margin="60,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background_1}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" Property="Data"
                                Value="{Binding Path=(btnTags:IconProperties.TagOnMouseOver) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="icon" Property="Fill"  Value="{Binding Path=(btnTags:IconProperties.TagFillMouseOver), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" Property="Stroke" Value="{Binding Path=(btnTags:IconProperties.TagStrokeMouseOver), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" Property="StrokeThickness" Value="{Binding Path=(btnTags:IconProperties.TagStrokeThicknessMouseOver),RelativeSource={RelativeSource TemplatedParent}}"/>

                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background_1}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" Property="Data"
                                Value="{Binding Path=(btnTags:IconProperties.TagOnPressed) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="icon" Property="Fill"  Value="{Binding Path=(btnTags:IconProperties.TagFillMousePressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" Property="Stroke" Value="{Binding Path=(btnTags:IconProperties.TagStrokeMousePressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" Property="StrokeThickness" Value="{Binding Path=(btnTags:IconProperties.TagStrokeThicknessMousePressed),RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Menu_Button_Normal" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="0" Background="{StaticResource Background_2}">
                        <Grid>
                            <!--https://stackoverflow.com/questions/70235104/how-to-use-parameters-or-binding-for-wpf-buttons-to-change-fa-icons-in-xaml-styl-->

                            <Path Data="{Binding Path=(btnTags:IconProperties.Tag), RelativeSource={RelativeSource TemplatedParent}}" 
                                  x:Name="icon"
                                  Width="{Binding Path=(btnTags:IconProperties.TagIconWidth), RelativeSource={RelativeSource TemplatedParent}}"
                                  Height="{Binding Path=(btnTags:IconProperties.TagIconHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                  Fill="{Binding Path=(btnTags:IconProperties.TagFill), RelativeSource={RelativeSource TemplatedParent}}"
                                  Stroke="{Binding Path=(btnTags:IconProperties.TagStroke), RelativeSource={RelativeSource TemplatedParent}}"
                                  StrokeThickness="{Binding Path=(btnTags:IconProperties.TagStrokeThickenss),RelativeSource={RelativeSource TemplatedParent}}"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin=" 10,0,0,0"/>

                            <ContentPresenter x:Name="MyContentPresenter" 
                                                Content="{TemplateBinding Content}" 
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Center" 
                                                Margin="60,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background_1}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" Property="Data"
                                Value="{Binding Path=(btnTags:IconProperties.TagOnMouseOver) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="icon" Property="Fill"  Value="{Binding Path=(btnTags:IconProperties.TagFillMouseOver), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" Property="Stroke" Value="{Binding Path=(btnTags:IconProperties.TagStrokeMouseOver), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" Property="StrokeThickness" Value="{Binding Path=(btnTags:IconProperties.TagStrokeThicknessMouseOver),RelativeSource={RelativeSource TemplatedParent}}"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Menu_Button_Radio_deneme" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" CornerRadius="0" Background="{StaticResource Background_2}">
                        <Grid>
                            <!--https://stackoverflow.com/questions/70235104/how-to-use-parameters-or-binding-for-wpf-buttons-to-change-fa-icons-in-xaml-styl-->

                            <Path Data="{Binding Path=(btnTags:IconProperties.Tag), RelativeSource={RelativeSource TemplatedParent}}" 
                                  x:Name="icon"
                                  Width="35"
                                  Height="35"
                                  Fill="{Binding Path=(btnTags:IconProperties.TagFill), RelativeSource={RelativeSource TemplatedParent}}"
                                  Stretch="Fill"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin=" 5,0,0,0"
                                  Visibility="Visible"
                                  
                                  Stroke="Black"
                                  StrokeThickness="2"
                                  />

                            <!--<Path Data=" M 4.7361246,29.945546 C 4.4441248,29.856402 4.1909883,29.620631 4.0859984,29.340021 l -0.066524,-0.177802 v -5.59182 -5.591821 L 3.4975657,17.97836 
	 C 2.8721582,17.978099 2.5865963,17.921699 2.2005491,17.722195 1.8213945,17.526254 1.4625785,17.156964 1.268934,16.763389 1.0674755,16.353931 1.0187886,
	 16.122447 1.0362865,15.657254 c 0.011549,-0.307045 0.029353,-0.415692 0.099564,-0.607595 0.1316426,-0.35981 0.321343,-0.63571 0.6773552,-0.985145 
	 C 2.2074494,13.677554 13.233396,3.2417398 13.54368,2.9618801 13.974945,2.5729008 14.509382,2.287418 15.109678,2.125363 15.381234,2.0520542 15.461073,2.0448327 16,
	 2.0448327 c 0.538927,0 0.618766,0.00722 0.890322,0.08053 0.529034,0.1428174 0.910765,0.3280109 1.345593,0.652803 0.20795,0.1553271 11.497243,10.8278963 12.055994,
	 11.3973863 0.278998,0.284359 0.352878,0.381184 0.456955,0.598865 0.185472,0.387925 0.23493,0.636461 0.21448,1.077805 -0.02846,0.614274 -0.225878,1.059287 -0.6622,
	 1.492739 -0.21094,0.209552 -0.307617,0.279132 -0.548335,0.394645 -0.408873,0.196206 -0.633741,0.238972 -1.256526,0.238972 h -0.515757 v 5.591821 c 0,5.546097 -5.17e-4,5.593205 
	 -0.06336,5.761156 -0.08082,0.216016 -0.274194,0.435785 -0.478077,0.543337 l -0.159637,0.08421 -3.139241,0.0084 -3.13924,0.0084 -1.84e-4,-3.716257 c -1.87e-4,-3.973733 1.25e-4,
	 -3.963955 -0.156682,-4.557543 -0.303994,-1.150654 -1.056146,-2.199714 -2.056277,-2.867982 -1.689198,-1.128689 -3.886464,-1.128689 -5.575662,0 -1.000131,0.668268 -1.752283,1.717328 
	 -2.056277,2.867982 -0.15682,0.593581 -0.156486,0.583856 -0.156682,4.556962 l -1.84e-4,3.715677 -3.0925021,-0.0027 c -1.7008764,-0.0015 -3.127556,-0.01338 -3.1703993,-0.02646 z" 
                                  x:Name="icon1"
                                  Width="35"
                                  Height="35"
                                  Fill="Transparent"
                                  StrokeThickness="2"
                                  Stroke="Red"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin=" 5,0,0,0" Opacity="1" Visibility="Visible"/>-->



                            <ContentPresenter x:Name="MyContentPresenter" 
                                                Content="{TemplateBinding Content}" 
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Center" 
                                                Margin="60,0,0,0"/>
                        </Grid>
                    </Border>
                    <!--<ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background_1}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" Property="Data"
                                Value="{Binding Path=(btnTags:IconProperties.TagOnMouseOver) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="icon"  Property="Fill"  Value="{DynamicResource ButtonFont}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background_1}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" Property="Data"
                                Value="{Binding Path=(btnTags:IconProperties.TagOnPressed) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="icon"  Property="Fill"  Value="{DynamicResource ButtonFont}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Icon_Button_toggle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="0" Background="Transparent">
                        <Grid>
                            <!--https://stackoverflow.com/questions/70235104/how-to-use-parameters-or-binding-for-wpf-buttons-to-change-fa-icons-in-xaml-styl-->

                            <Path x:Name="icon"
                                  Width="{Binding Path=(btnTags:IconProperties.TagIconWidth), RelativeSource={RelativeSource TemplatedParent}}"
                                  Height="{Binding Path=(btnTags:IconProperties.TagIconHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                  Data="{Binding Path=(btnTags:IconProperties.Tag), RelativeSource={RelativeSource TemplatedParent}}" 
                                  Fill="{Binding Path=(btnTags:IconProperties.TagFill), RelativeSource={RelativeSource TemplatedParent}}"
                                  Stroke="{Binding Path=(btnTags:IconProperties.TagStroke), RelativeSource={RelativeSource TemplatedParent}}"
                                  StrokeThickness="{Binding Path=(btnTags:IconProperties.TagStrokeThickenss),RelativeSource={RelativeSource TemplatedParent}}"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Opacity="0.5"/>

                            <!--<ContentPresenter x:Name="MyContentPresenter" 
                                                Content="{TemplateBinding Content}" 
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Center" 
                                                Margin="60,0,0,0"/>-->
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" 
                                    Property="Data"
                                    Value="{Binding Path=(btnTags:IconProperties.TagOnMouseOver) , RelativeSource={RelativeSource TemplatedParent}}" />

                            <Setter TargetName="icon" 
                                    Property="Fill"  
                                    Value="{Binding Path=(btnTags:IconProperties.TagFillMouseOver), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" 
                                    Property="Stroke" 
                                    Value="{Binding Path=(btnTags:IconProperties.TagStrokeMouseOver), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" 
                                    Property="StrokeThickness" 
                                    Value="{Binding Path=(btnTags:IconProperties.TagStrokeThicknessMouseOver),RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon"
                                    Property="Opacity"
                                    Value="1"/>

                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" 
                                    Property="Data"
                                    Value="{Binding Path=(btnTags:IconProperties.TagOnPressed) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="icon" 
                                    Property="Fill"  
                                    Value="{Binding Path=(btnTags:IconProperties.TagFillMousePressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" 
                                    Property="Stroke" 
                                    Value="{Binding Path=(btnTags:IconProperties.TagStrokeMousePressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" 
                                    Property="StrokeThickness" 
                                    Value="{Binding Path=(btnTags:IconProperties.TagStrokeThicknessMousePressed),RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconContent_Button_Toggle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="0" Background="Transparent">
                        <Grid>
                            <!--https://stackoverflow.com/questions/70235104/how-to-use-parameters-or-binding-for-wpf-buttons-to-change-fa-icons-in-xaml-styl-->

                            <Path x:Name="icon"
                                  Width="{Binding Path=(btnTags:IconProperties.TagIconWidth), RelativeSource={RelativeSource TemplatedParent}}"
                                  Height="{Binding Path=(btnTags:IconProperties.TagIconHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                  Data="{Binding Path=(btnTags:IconProperties.Tag), RelativeSource={RelativeSource TemplatedParent}}" 
                                  Fill="{Binding Path=(btnTags:IconProperties.TagFill), RelativeSource={RelativeSource TemplatedParent}}"
                                  Stroke="{Binding Path=(btnTags:IconProperties.TagStroke), RelativeSource={RelativeSource TemplatedParent}}"
                                  StrokeThickness="{Binding Path=(btnTags:IconProperties.TagStrokeThickenss),RelativeSource={RelativeSource TemplatedParent}}"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"/>

                            <ContentPresenter x:Name="MyContentPresenter" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Right" 
                                              VerticalAlignment="Center" 
                                              Margin="30,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" 
                                    Property="Data"
                                    Value="{Binding Path=(btnTags:IconProperties.TagOnMouseOver) , RelativeSource={RelativeSource TemplatedParent}}" />

                            <Setter TargetName="icon" 
                                    Property="Fill"  
                                    Value="{Binding Path=(btnTags:IconProperties.TagFillMouseOver), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" 
                                    Property="Stroke" 
                                    Value="{Binding Path=(btnTags:IconProperties.TagStrokeMouseOver), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" 
                                    Property="StrokeThickness" 
                                    Value="{Binding Path=(btnTags:IconProperties.TagStrokeThicknessMouseOver),RelativeSource={RelativeSource TemplatedParent}}"/>

                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" 
                                    Property="Data"
                                    Value="{Binding Path=(btnTags:IconProperties.TagOnPressed) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="icon" 
                                    Property="Fill"  
                                    Value="{Binding Path=(btnTags:IconProperties.TagFillMousePressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" 
                                    Property="Stroke" 
                                    Value="{Binding Path=(btnTags:IconProperties.TagStrokeMousePressed), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" 
                                    Property="StrokeThickness" 
                                    Value="{Binding Path=(btnTags:IconProperties.TagStrokeThicknessMousePressed),RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Icon_Button" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            CornerRadius="0" 
                            Background="Transparent"
                            >
                        <Grid>
                            <!--https://stackoverflow.com/questions/70235104/how-to-use-parameters-or-binding-for-wpf-buttons-to-change-fa-icons-in-xaml-styl-->

                            <Path x:Name="icon"
                                  Width="{Binding Path=(btnTags:IconProperties.TagIconWidth), RelativeSource={RelativeSource TemplatedParent}}"
                                  Height="{Binding Path=(btnTags:IconProperties.TagIconHeight), RelativeSource={RelativeSource TemplatedParent}}"
                                  Data="{Binding Path=(btnTags:IconProperties.Tag), RelativeSource={RelativeSource TemplatedParent}}" 
                                  Fill="{Binding Path=(btnTags:IconProperties.TagFill), RelativeSource={RelativeSource TemplatedParent}}"
                                  Stroke="{Binding Path=(btnTags:IconProperties.TagStroke), RelativeSource={RelativeSource TemplatedParent}}"
                                  StrokeThickness="{Binding Path=(btnTags:IconProperties.TagStrokeThickenss),RelativeSource={RelativeSource TemplatedParent}}"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Opacity="0.5"/>

                            <ContentPresenter x:Name="MyContentPresenter" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Right" 
                                              VerticalAlignment="Center" 
                                              Margin="30,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" 
                                    Property="Data"
                                    Value="{Binding Path=(btnTags:IconProperties.TagOnMouseOver) , RelativeSource={RelativeSource TemplatedParent}}" />

                            <Setter TargetName="icon" 
                                    Property="Fill"  
                                    Value="{Binding Path=(btnTags:IconProperties.TagFillMouseOver), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" 
                                    Property="Stroke" 
                                    Value="{Binding Path=(btnTags:IconProperties.TagStrokeMouseOver), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter TargetName="icon" 
                                    Property="StrokeThickness" 
                                    Value="{Binding Path=(btnTags:IconProperties.TagStrokeThicknessMouseOver),RelativeSource={RelativeSource TemplatedParent}}"/>

                            <Setter TargetName="icon" 
                                    Property="Opacity" 
                                    Value="1"/>

                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Button_Generic" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            CornerRadius="3" 
                            BorderThickness="3"
                            BorderBrush="{StaticResource ButtonFont}"
                            Background="{StaticResource Button_Background_1}"
                            Opacity="0.8">
                        <Grid>

                            <ContentPresenter x:Name="MyContentPresenter" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              Margin="0,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" 
                                    Property="Background" 
                                    Value="{StaticResource Button_Background_1}"/>

                            <Setter TargetName="border"
                                    Property="Opacity"
                                    Value="1"/>

                            <Setter Property="Foreground" 
                                    Value="{DynamicResource ButtonFont}"/>
                            
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Keycap_Button" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            CornerRadius="0" 
                            Background="Transparent"
                            >
                        <Grid>
                            <!--https://stackoverflow.com/questions/70235104/how-to-use-parameters-or-binding-for-wpf-buttons-to-change-fa-icons-in-xaml-styl-->

                            <Path x:Name="icon1"
                                  Data="{StaticResource KeyCap_1_P1}" 
                                  Stretch="Uniform"
                                  Fill="#FF6D6D6D"
                                  Stroke="Transparent"
                                  StrokeThickness="0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Opacity="1"/>
                            
                            <Path x:Name="icon2"
                                  Data="{StaticResource KeyCap_1_P2}" 
                                  Stretch="Uniform"
                                  Fill="Gray"
                                  Stroke="Transparent"
                                  StrokeThickness="0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Opacity="1"/>
                            
                            <Path x:Name="icon3"
                                  Data="{StaticResource KeyCap_1_P3}" 
                                  Width="15"
                                  Height="15"
                                  Stretch="Fill"
                                  Fill="#FFECECEC"
                                  Stroke="Transparent"
                                  StrokeThickness="0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  Margin="3,3,0,0"
                                  Opacity="0.5"/>

                            <Rectangle x:Name="icon_Cover"
                                       Fill="#FF4A4A4A"
                                       Opacity="0.5"/>

                            <ContentPresenter x:Name="MyContentPresenter" 
                                              Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center" 
                                              Margin="0,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="icon_Cover" Property="Opacity" Value="0"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    
    
</ResourceDictionary>