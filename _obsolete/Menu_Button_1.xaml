<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fasharp="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
                    xmlns:fa="http://schemas.fontawesome.io/icons/"
                    xmlns:btnTags="clr-namespace:Button_Tags">
    

    <Style x:Key="Menu_Button_1" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="0" Background="{StaticResource Background_2}">
                        <Grid>
                            <!--https://stackoverflow.com/questions/70235104/how-to-use-parameters-or-binding-for-wpf-buttons-to-change-fa-icons-in-xaml-styl-->
                            <fasharp:IconImage x:Name="icon" 
                                               Icon="{Binding Tag, RelativeSource={RelativeSource FindAncestor,  AncestorType=Button}}"
                                               IconFont="Solid"
                                               Foreground="{StaticResource ButtonFont}" 
                                               VerticalAlignment="Center" 
                                               HorizontalAlignment="Left" 
                                               Margin="5" 
                                               fasharp:Awesome.Spin="False"/>



                            <!--<Path Data="{Binding Tag, RelativeSource={RelativeSource FindAncestor,  AncestorType=Button}}" 
                                  x:Name="icon"
                                  Width="35"
                                  Height="35"
                                  Fill="{TemplateBinding Foreground}"
                                  
                                  Stretch="Fill"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin=" 5,0,0,0"/>-->

                            <ContentPresenter x:Name="MyContentPresenter" 
                                                Content="{TemplateBinding Content}" 
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Center" 
                                                Margin="60,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background_1}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon"  Property="Foreground"  Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" Property="IconFont" Value="Regular"/>
                        </Trigger>

                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF822020"/>
                            <Setter Property="Foreground" Value="Beige"/>
                            <Setter TargetName="icon" Property="IconFont" Value="Regular"/>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Menu_Button_1_1" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="0" Background="{StaticResource Background_2}">
                        <Grid>
                            <!--https://stackoverflow.com/questions/70235104/how-to-use-parameters-or-binding-for-wpf-buttons-to-change-fa-icons-in-xaml-styl-->

                            <Path Data="{Binding Path=(btnTags:IconProperties.Tag), RelativeSource={RelativeSource TemplatedParent}}" 
                                  x:Name="icon"
                                  Width="35"
                                  Height="35"
                                  Fill="{StaticResource ButtonFont}"
                                  
                                  Stretch="Fill"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin=" 5,0,0,0"/>

                            <ContentPresenter x:Name="MyContentPresenter" 
                                                Content="{TemplateBinding Content}" 
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Center" 
                                                Margin="60,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background_1}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" Property="Data"
                                Value="{Binding Path=(btnTags:IconProperties.TagOnMouseOver) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="icon"  Property="Fill"  Value="{DynamicResource ButtonFont}"/>
                        </Trigger>

                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF822020"/>
                            <Setter Property="Foreground" Value="Beige"/>
                            <Setter TargetName="icon" Property="Data"
                                Value="{Binding Path=(btnTags:IconProperties.TagOnPressed) , RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PathButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path x:Name="IconPath"
                              Data="{Binding Path=(btnTags:IconProperties.Tag), RelativeSource={RelativeSource TemplatedParent}}"
                              Fill="{TemplateBinding Foreground}" 
                              Width="35"
                              Height="35"
                              HorizontalAlignment="Left"
                              Margin="5,0,0,0"
                              Stretch="Fill"/>
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"
                                      Margin="5,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="IconPath" Property="Data"
                                Value="{Binding Path=(btnTags:IconProperties.TagOnMouseOver) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="IconPath" Property="Fill" Value="purple"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="IconPath" Property="Data"
                                Value="{Binding Path=PressedIconPath, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Menu_Button_3_Radio" TargetType="RadioButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="./#Segoe UI" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Foreground" Value="{StaticResource HeadLine}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border" CornerRadius="0" Background="{StaticResource Background_2}">
                        <Grid>
                            <!--https://stackoverflow.com/questions/70235104/how-to-use-parameters-or-binding-for-wpf-buttons-to-change-fa-icons-in-xaml-styl-->

                            <Path Data="{Binding Path=(btnTags:IconProperties.Tag), RelativeSource={RelativeSource TemplatedParent}}" 
                                  x:Name="icon"
                                  Width="35"
                                  Height="35"
                                  Fill="{StaticResource ButtonFont}"
                                  
                                  Stretch="Fill"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  Margin=" 5,0,0,0"/>

                            <ContentPresenter x:Name="MyContentPresenter" 
                                                Content="{TemplateBinding Content}" 
                                                HorizontalAlignment="Left" 
                                                VerticalAlignment="Center" 
                                                Margin="60,0,0,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background_1}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" Property="Data"
                                Value="{Binding Path=(btnTags:IconProperties.TagOnMouseOver) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="icon"  Property="Fill"  Value="{DynamicResource ButtonFont}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource Background_1}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonFont}"/>
                            <Setter TargetName="icon" Property="Data"
                                Value="{Binding Path=(btnTags:IconProperties.TagOnPressed) , RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="icon"  Property="Fill"  Value="{DynamicResource ButtonFont}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>